// <auto-generated />
using System;
using InteractiveMapGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InteractiveMapGame.Migrations
{
    [DbContext(typeof(MapGameDbContext))]
    [Migration("20251030172108_AddAdminTables")]
    partial class AddAdminTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("InteractiveMapGame.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.AdminSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastActivityAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("SessionToken")
                        .IsUnique();

                    b.ToTable("AdminSessions");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.InteractionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InteractionData")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LLMPrompt")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("LLMResponse")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("LLMTokens")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UsedLLM")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("WasSuccessful")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapObjectId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("InteractionLogs");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.MapObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Era")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceValue")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FirstFlight")
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneratedDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneratedFacts")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneratedStory")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDiscoverable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInteractive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelUrl")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Video360Url")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.Property<double>("Z")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("IsUnlocked");

                    b.HasIndex("Type");

                    b.HasIndex("X", "Y", "Z");

                    b.ToTable("MapObjects");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.PlayerProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompletedQuests")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiscoveredObjects")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<double>("LastX")
                        .HasColumnType("REAL");

                    b.Property<double>("LastY")
                        .HasColumnType("REAL");

                    b.Property<double>("LastZ")
                        .HasColumnType("REAL");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerPreferences")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalExperience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalInteractions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnlockedObjects")
                        .HasColumnType("TEXT");

                    b.Property<int>("VideosWatched")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SessionId");

                    b.ToTable("PlayerProgress");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.AdminSession", b =>
                {
                    b.HasOne("InteractiveMapGame.Models.Admin", "Admin")
                        .WithMany("Sessions")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("InteractiveMapGame.Models.Admin", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
